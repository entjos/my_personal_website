{
  "hash": "a069af0bd914614fd30a7649027082b3",
  "result": {
    "markdown": "---\ntitle: \"Fitting a flexible parametric survival model in R using {rstpm2}\"\nauthor: \"Joshua Philipp Entrop\"\ndate: '2020-12-20'\ncategories: [R, Flexible Parametric Survival Models]\ntags: [R, survival analysis, flexible parametric survival models]\ndraft: TRUE\n---\n\n\nPrefix\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Prefix -------------------------------------------------------------------\n\n# 1.1 Load packages ===========================================================\n\nlibrary(rstpm2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: survival\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: splines\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rstpm2'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:survival':\n\n    colon\n```\n:::\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(readstata13)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readstata13' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(latex2exp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'latex2exp' was built under R version 4.3.2\n```\n:::\n\n```{.r .cell-code}\n# 1.2 Set up Rottadam 2 data set ==============================================\n\nrott2 <- AF::rott2 # For more information see help(rott2)\n\n# Create variable for survival time in years\nrott2$rf_year <- rott2$rf / 12\n\n# Create numeric dummy for hormon use\nrott2$hormon_num <- ifelse(rott2$hormon == \"no\", 0, 1) # \n```\n:::\n\n\nFit Cox model\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. Cox model ----------------------------------------------------------------\n\n# 2.1 Fit Cox model ===========================================================\n\ncox_model <- coxph(Surv(rf_year, rfi) ~ hormon_num,\n                   data = rott2)\n\nsummary(cox_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\ncoxph(formula = Surv(rf_year, rfi) ~ hormon_num, data = rott2)\n\n  n= 2982, number of events= 1518 \n\n             coef exp(coef) se(coef)     z Pr(>|z|)   \nhormon_num 0.2436    1.2758   0.0793 3.072  0.00213 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n           exp(coef) exp(-coef) lower .95 upper .95\nhormon_num     1.276     0.7838     1.092      1.49\n\nConcordance= 0.511  (se = 0.004 )\nLikelihood ratio test= 8.88  on 1 df,   p=0.003\nWald test            = 9.44  on 1 df,   p=0.002\nScore (logrank) test = 9.48  on 1 df,   p=0.002\n```\n:::\n:::\n\n\nTest for tvc\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2.2 Test for time dependent effects =========================================\n\n# comupte Schoenefeld residuals\ncox_res <- cox.zph(cox_model,\n                   transform = \"km\") \n\n#' Plot smooth curve of Schoenefeld residuals. Add beta(hormon) from cox_model.\n#' Print p-value for test of non-dependent effects\nplot(cox_res,\n     resid = FALSE,\n     xlab = \"km tranformed years\",\n     ylab = TeX(\"Estimated $\\\\beta_{hormon}$ (t)\"))\ntitle(\"Smoothed Schoenefeld residuals for hormon use\",\n      sub = TeX(\"Red line: Estimated $\\\\beta$ for hormon use obtained from Cox model\"),\n      adj = 0)\nabline(h = as.numeric(cox_model$coefficients),\n       col = \"red\")\ntext(0.1, -1.25, \n     paste(\"P-value =\", round(cox_res$table[\"hormon_num\", \"p\"], 2)))\n```\n\n::: {.cell-output-display}\n![](fit_rstpm2_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nFit fpm\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3. Estimate flexible parametric survival model (FPM)-------------------------\n\n# 3.1 Test for degrees of freedome ============================================\n\n# Fit FPM with different degrees of freedome\nfpm_models <- lapply(1:5, function(i){\n  \n  stpm2(Surv(rf_year, rfi) ~ hormon_num,\n        data = rott2,\n        df = i,\n        tvc = list(\"hormon_num\" = i))\n  \n})\n\n# Compute AIC and BIC for different models\nlapply(1:5, function(i){\n  \n  data.frame(df = i, \n             bic = BIC(fpm_models[[i]]),\n             aic = AIC(fpm_models[[i]]))\n  \n}) %>% \n  bind_rows() %>% \n  arrange(bic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  df      bic      aic\n1  3 10154.97 10106.97\n2  2 10159.98 10123.98\n3  4 10168.96 10108.95\n4  5 10182.89 10110.89\n5  1 10393.19 10369.19\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot hazard rates for FPMs with different d.f.\n\n# Predict hazard rates for different d.f. by sex\nfpm_haz <- lapply(0:1, function(hormoni){\n  lapply(1:5, function(i){\n    \n    data.frame(\n      predict(\n        fpm_models[[i]],\n        newdata = data.frame(hormon_num = hormoni),\n        grid = TRUE,\n        type = \"hazard\",\n        se.fit = TRUE,\n        full = TRUE),\n      df = i,\n      hormon = hormoni)\n    \n  }) %>% bind_rows()\n}) %>% bind_rows()\n\n# Plot predicted hazard rates by sex\nfacet_labs <- c(\"Non hormon users\", \"Hormon users\")\nnames(facet_labs) <- c(0, 1)\n\nggplot(fpm_haz,\n       aes(x = rf_year,\n           y = Estimate * 10000,\n           lty = as.factor(df),\n           group = as.factor(df))) +\n  geom_line() +\n  facet_wrap(~ hormon_num,\n             labeller = labeller(hormon_num = facet_labs)) +\n  labs(title = \"Relapse rate among breast cancer patients by hormon use\",\n       x = \"Years\",\n       y = \"Rate per 10 000 person-years\",\n       lty = \"d.f. of FPM\") +\n  theme_bw() +\n  theme(panel.grid = element_blank(),\n        strip.background = element_blank())\n```\n\n::: {.cell-output-display}\n![](fit_rstpm2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up new-data-object for prediction of hazard rates\nnewdata1 <- data.frame(hormon_num = 0)\n\n# Begin plot\nplot(fpm_models[[1]],\n     newdata = newdata1,\n     type = \"hr\",\n     exposed = function(newdata1) transform(newdata1, hormon_num = 1),\n     ci = FALSE,\n     rug = FALSE,\n     ylim = c(0.5, 3),\n     lty = 1,\n     xlab = \"Years\")\n\nlapply(2:5, function(i){\n  \n  lines(fpm_models[[i]],\n        newdata = newdata1,\n        type = \"hr\",\n        exposed = function(newdata1) transform(newdata1, hormon_num = 1),\n        ci = FALSE,\n        lty = i)\n  \n})\n\nabline(h = exp(as.numeric(cox_model$coefficients)),\n       col = \"blue\")\n\ntitle(\"Hazard ratio of relapse comparing hormon-users and non-users\",\n      sub = \"Blue line: Cox-model\",\n      adj = 0)\n\nlegend(\"topright\", \n       legend = vapply(c(1:5), function(i) {paste(\"df =\", i)}, character(1)), \n       lty = 1:5,\n       title = \"d.f.\")\n```\n\n::: {.cell-output-display}\n![](fit_rstpm2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up new-data-object for prediction of hazard rates\n#newdata1 <- data.frame(hormon_num = 0)\n#\n#fpm_df3_comp <- lapply(list(\"hr\", \"hdiff\"), function(e_type){\n#  \n#  data.frame(\n#    predict(\n#      fpm_models[[3]],\n#      type = e_type,\n#      newdata = data.frame(hormon_num = 0),\n#      var = \"hormon_num\",\n#      grid = TRUE,\n#      se.fit = TRUE,\n#      full = TRUE),\n#    type = e_type)\n#  \n#})\n#\n#fpm_df3_abs <- lapply(list(\"hazard\", \"cumhaz\"), function(e_type){\n#  lapply(0:1, function(hormoni){\n#    \n#    data.frame(\n#      predict(\n#        fpm_models[[3]],\n#        type = e_type,\n#        newdata = data.frame(hormon_num = hormoni),\n#        grid = TRUE,\n#        se.fit = TRUE,\n#        full = TRUE),\n#      type = e_type) \n#    \n#  }) %>% bind_rows()\n#}) %>% bind_rows()\n#\n#ggplot(fpm_df3_comp,\n#       aes(x = rf_year,\n#           y = Estimate)) +\n#  geom_line() +\n#  facet_wrap(~ type,\n#             scales = \"free_y\")\n#\n#ggplot(fpm_df3_abs,\n#       aes(x = rf_year,\n#           y = Estimate,\n#           lty = as.factor(hormon_num),\n#           group = as.factor(hormon_num))) +\n#  geom_line() +\n#  facet_wrap(~ type,\n#             scales = \"free_y\")\n#\n```\n:::\n",
    "supporting": [
      "fit_rstpm2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}